[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "linkedin-sourcing-agent"
version = "1.0.0"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
description = "Professional LinkedIn candidate sourcing, scoring, and outreach automation"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business :: Human Resources",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Natural Language :: English",
    "Typing :: Typed",
]
keywords = [
    "linkedin", "recruitment", "sourcing", "ai", "automation",
    "candidates", "outreach", "scoring", "hr", "hiring",
    "machine-learning", "nlp", "gpt", "chatgpt"
]
dependencies = [
    "aiohttp>=3.8.0",
    "openai>=1.0.0",
    "python-dotenv>=0.19.0",
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "pydantic>=1.10.0",
    "asyncio-throttle>=1.0.0",
    "rich>=12.0.0",
    "click>=8.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "isort>=5.10.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
transformers = [
    "transformers>=4.20.0",
    "torch>=1.12.0",
    "accelerate>=0.20.0",
]
full = [
    "transformers>=4.20.0",
    "torch>=1.12.0",
    "accelerate>=0.20.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.3.0",
    "celery>=5.2.0",
    "prometheus-client>=0.14.0",
]

[project.urls]
"Homepage" = "https://github.com/your-org/linkedin-sourcing-agent"
"Bug Reports" = "https://github.com/your-org/linkedin-sourcing-agent/issues"
"Source" = "https://github.com/your-org/linkedin-sourcing-agent"
"Documentation" = "https://docs.your-site.com"
"Changelog" = "https://github.com/your-org/linkedin-sourcing-agent/blob/main/CHANGELOG.md"

[project.scripts]
linkedin-agent = "linkedin_sourcing_agent.cli:main"
linkedin-sourcing-agent = "linkedin_sourcing_agent.cli:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["linkedin_sourcing_agent*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
linkedin_sourcing_agent = [
    "config/*.py",
    "examples/*.py", 
    "docs/*.md",
    "*.md",
    "*.txt"
]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict = true

[[tool.mypy.overrides]]
module = [
    "transformers",
    "torch",
    "openai",
    "requests",
    "beautifulsoup4",
    "asyncio_throttle"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=linkedin_sourcing_agent",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["linkedin_sourcing_agent"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
    "*/examples/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]
